{
  "hash": "1dadbf895ed331b38bd7879148d374f3",
  "result": {
    "markdown": "---\ntitle: Pengolahan Data Menggunakan Pandas - Part 1\ndescription: |\n  Mengolah data menggunakan Pandas: membaca data, menambah kolom dan menyimpan ke dalam file baru.\ncategories:\n  - Python\n  - Pandas\ndate: '2022-09-24'\n---\n\n# Pendahuluan\nPandas menjadi salah satu *library* yang banyak digunakan dalam pemrosesan data karena memiliki banyak fitur yang mendukung. Penggunaan bahasa pemrograman dalam pemrosesan data menjadi pilihan yang baik terutama jika data yang diolah memiliki ukuran yang besar dan variasi yang beragam. Pada artikel ini akan dijelaskan secara ringkah penggunaan Pandas dalam pemrosesan data mulai dari pembacaan hingga pembuatan berkas hasil pengolahan.\n\n# Pengolahan Data\n## Pembacaan data\nData dalam bentuk *file* seperti `csv`, `json` maupun `xlsx` dapat dibaca menggunakan Pandas menggunakan metode yang tersedia. Data yang digunakan berada dalam format `xlsx` dan memiliki nama `data_anggota.xlsx`, untuk membaca file tersebut digunakan metode `read_excel()`.\n\n\n```{bash, echo=FALSE}\nls *xlsx\n```\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom pandas import read_excel\ndf = read_excel('data_anggota.xlsx')\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>nama_depan</th>\n      <th>nama_belakang</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Ani</td>\n      <td>Lestari</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Budi</td>\n      <td>Hermawan</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Cindy</td>\n      <td>Amara</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Dodi</td>\n      <td>Mulyanto</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Eka</td>\n      <td>Saputra</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Menambah kolom\nPada `DataFrame` di atas akan ditambahkan kolom baru yang berisi nama lengkap dari masing-masing anggota. Karena tipe data pada kolom nama depan dan belakang sama (`str` atau `object`) langkah pemrosesan tipe data `str` dapat dilakukan seperti di bawah ini.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf['nama_lengkap'] = df.nama_depan + ' ' + df.nama_belakang\ndf['email'] = df.nama_depan.str.lower() + '.' + df.nama_belakang.str.lower() + '@mail.com'\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>nama_depan</th>\n      <th>nama_belakang</th>\n      <th>nama_lengkap</th>\n      <th>email</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Ani</td>\n      <td>Lestari</td>\n      <td>Ani Lestari</td>\n      <td>ani.lestari@mail.com</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Budi</td>\n      <td>Hermawan</td>\n      <td>Budi Hermawan</td>\n      <td>budi.hermawan@mail.com</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Cindy</td>\n      <td>Amara</td>\n      <td>Cindy Amara</td>\n      <td>cindy.amara@mail.com</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Dodi</td>\n      <td>Mulyanto</td>\n      <td>Dodi Mulyanto</td>\n      <td>dodi.mulyanto@mail.com</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Eka</td>\n      <td>Saputra</td>\n      <td>Eka Saputra</td>\n      <td>eka.saputra@mail.com</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nSelain nama lengkap, kolom email juga dapat ditambahkan. Kolom email memiliki format penawaan `nama_depan.nama_belakang@mail.com`, metode `str.lower()` pada contoh di atas berfungsi untuk membuat setiap karakter menjadi huruf kecil.\n\n# Menyimpan Data\nData yang telah diolah dapat disimpak ke dalam file baru menggunakan metode `to_csv()` untuk format `csv` atau `to_excel` untuk format excel seperti `xlsx` atau pun `xls`.\n\n## Format CSV\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndf.to_csv('hasil_pengolahan.csv', index=False)\n```\n:::\n\n\n## Format XLSX\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf.to_excel('hasil_pengolahan.xlsx', index=False)\n```\n:::\n\n\n```{bash, echo=FALSE}\nls hasil_pengolahan*\n```\n\n",
    "supporting": [
      "pengolahan-data-menggunakan-pandas-part-1_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}